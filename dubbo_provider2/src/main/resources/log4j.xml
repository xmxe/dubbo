<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">  
  
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
  
  	<!-- Log4j提供的appender有以下几种:  -->  
    <!-- org.apache.log4j.ConsoleAppender(控制台),  -->  
    <!-- org.apache.log4j.FileAppender(文件),  -->  
    <!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->  
    <!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->  
    <!-- 日志自动生成，名字后面加上日期 <param name="DatePattern" value="'.'yyyy-MM-dd"/>-->
    <!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->
  	
    <!-- 控制台输出 -->
    <appender name="console" class="org.apache.log4j.ConsoleAppender">  
    	<param name="target" value="System.out" />
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern" value="[%d{HH\:mm\:ss}][%p][%c]%m%n" />  
        </layout>  
    </appender>
    
    <!-- 文件输出 -->
    <appender name="logfile" class="org.apache.log4j.RollingFileAppender">
		<param name="Threshold" value="INFO" />
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
		<param name="Append" value="true" />
		<param name="MaxFileSize" value="10240KB" />
		<param name="MaxBackupIndex" value="10" />
		<param name="ImmediateFlush" value="true" />
		<param name="File" value="/scheduler_logs-10/gsip_scheduler.log" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%m%n" />
		</layout>
	</appender>
	
	<!-- 文件输出     设置是否在重新启动服务时，在原有日志的基础添加新日志  
    <appender name="logfile_info" class="org.apache.log4j.RollingFileAppender">
		<param name="Threshold" value="INFO" />
		
		<param name="Append" value="true" />
		<param name="MaxFileSize" value="10240KB" />
		<param name="MaxBackupIndex" value="10" />
		<param name="ImmediateFlush" value="true" />
		<param name="File" value="/scheduler_logs-0INFO/gsip_scheduler.log" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="{%-5p} [%d] &lt;%c&gt; : %m%n" />
		</layout>
	</appender>
	-->
	
  	<!--通过<logger></logger>的定义可以将各个包中的类日志输出到不同的日志文件中-->
    <!--通过<category></category>的定义可以将各个包中的类日志输出到不同的日志文件中-->
    
    
    <!--  -->
    <category name="java.sql">  
        <priority value="DEBUG" />
    </category>  
    
    <category name="com.provider">
        <priority value="DEBUG" />
    </category>
    
    
    <root>  
        <priority value="debug" />  
        <appender-ref ref="console" />  
        <!-- <appender-ref ref="logfile" />   -->
        <!--
        <appender-ref ref="logfile_info" />
        -->
    </root>  
  
</log4j:configuration>










